{"ast":null,"code":"var _jsxFileName = \"/Users/beatrizbarbosa/Projects/trybe-projects/sd-010-a-project-trivia-react-redux/src/components/Header.jsx\";\nimport React from 'react';\nimport md5 from 'crypto-js/md5';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux'; // import { gravatarRequest } from '../REDUX/Actions/index';\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Gravatar: {}\n    };\n    this.convertEmailtoHash = this.convertEmailtoHash.bind(this);\n  }\n\n  componentDidMount() {\n    this.convertEmailtoHash();\n  }\n\n  convertEmailtoHash() {\n    const email = this.props.getEmail.email;\n    const get = md5(email).toString();\n    this.setState({\n      Gravatar: get\n    }); // firstGravatarRequest(get);\n  }\n\n  render() {\n    const Gravatar = this.state.Gravatar;\n    const _this$props = this.props,\n          name = _this$props.getEmail.name,\n          score = _this$props.score;\n    return React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      \"data-testid\": \"header-profile-picture\",\n      src: `https://www.gravatar.com/avatar/${Gravatar}`,\n      alt: \"Avatar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      \"data-testid\": \"header-player-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, name), React.createElement(\"h1\", {\n      \"data-testid\": \"header-score\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, score)));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  getEmail: state.PlayerReducer\n});\n\nconst mapDispatchToProps = () => ({// firstGravatarRequest: (gravatar) => dispatch(gravatarRequest(gravatar)),\n});\n\nHeader.propTypes = {\n  getEmail: PropTypes.objectOf(PropTypes.string).isRequired,\n  score: PropTypes.number.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","map":{"version":3,"sources":["/Users/beatrizbarbosa/Projects/trybe-projects/sd-010-a-project-trivia-react-redux/src/components/Header.jsx"],"names":["React","md5","PropTypes","connect","Header","Component","constructor","props","state","Gravatar","convertEmailtoHash","bind","componentDidMount","email","getEmail","get","toString","setState","render","name","score","mapStateToProps","PlayerReducer","mapDispatchToProps","propTypes","objectOf","string","isRequired","number"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,eAAhB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AAEA,MAAMC,MAAN,SAAqBJ,KAAK,CAACK,SAA3B,CAAqC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGA,SAAKC,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBC,IAAxB,CAA6B,IAA7B,CAA1B;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKF,kBAAL;AACD;;AAEDA,EAAAA,kBAAkB,GAAG;AAAA,UACCG,KADD,GACa,KAAKN,KADlB,CACXO,QADW,CACCD,KADD;AAEnB,UAAME,GAAG,GAAGd,GAAG,CAACY,KAAD,CAAH,CAAWG,QAAX,EAAZ;AACA,SAAKC,QAAL,CAAc;AAAER,MAAAA,QAAQ,EAAEM;AAAZ,KAAd,EAHmB,CAInB;AACD;;AAEDG,EAAAA,MAAM,GAAG;AAAA,UACCT,QADD,GACc,KAAKD,KADnB,CACCC,QADD;AAAA,wBAE+B,KAAKF,KAFpC;AAAA,UAEaY,IAFb,eAECL,QAFD,CAEaK,IAFb;AAAA,UAEqBC,KAFrB,eAEqBA,KAFrB;AAIP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,qBAAY,wBADd;AAEE,MAAA,GAAG,EAAI,mCAAkCX,QAAS,EAFpD;AAGE,MAAA,GAAG,EAAC,QAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAME;AAAI,qBAAY,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsCU,IAAtC,CANF,EAOE;AAAI,qBAAY,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCC,KAAhC,CAPF,CADF,CADF;AAcD;;AAtCkC;;AAwCrC,MAAMC,eAAe,GAAIb,KAAD,KAAY;AAClCM,EAAAA,QAAQ,EAAEN,KAAK,CAACc;AADkB,CAAZ,CAAxB;;AAIA,MAAMC,kBAAkB,GAAG,OAAO,CAChC;AADgC,CAAP,CAA3B;;AAIAnB,MAAM,CAACoB,SAAP,GAAmB;AACjBV,EAAAA,QAAQ,EAAEZ,SAAS,CAACuB,QAAV,CAAmBvB,SAAS,CAACwB,MAA7B,EAAqCC,UAD9B;AAEjBP,EAAAA,KAAK,EAAElB,SAAS,CAAC0B,MAAV,CAAiBD;AAFP,CAAnB;AAIA,eAAexB,OAAO,CAACkB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CnB,MAA7C,CAAf","sourcesContent":["import React from 'react';\nimport md5 from 'crypto-js/md5';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n// import { gravatarRequest } from '../REDUX/Actions/index';\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Gravatar: {},\n    };\n    this.convertEmailtoHash = this.convertEmailtoHash.bind(this);\n  }\n\n  componentDidMount() {\n    this.convertEmailtoHash();\n  }\n\n  convertEmailtoHash() {\n    const { getEmail: { email } } = this.props;\n    const get = md5(email).toString();\n    this.setState({ Gravatar: get });\n    // firstGravatarRequest(get);\n  }\n\n  render() {\n    const { Gravatar } = this.state;\n    const { getEmail: { name }, score } = this.props;\n\n    return (\n      <section>\n        <header>\n          <img\n            data-testid=\"header-profile-picture\"\n            src={ `https://www.gravatar.com/avatar/${Gravatar}` }\n            alt=\"Avatar\"\n          />\n          <h3 data-testid=\"header-player-name\">{name}</h3>\n          <h1 data-testid=\"header-score\">{score}</h1>\n\n        </header>\n      </section>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  getEmail: state.PlayerReducer,\n});\n\nconst mapDispatchToProps = () => ({\n  // firstGravatarRequest: (gravatar) => dispatch(gravatarRequest(gravatar)),\n});\n\nHeader.propTypes = {\n  getEmail: PropTypes.objectOf(PropTypes.string).isRequired,\n  score: PropTypes.number.isRequired,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n"]},"metadata":{},"sourceType":"module"}