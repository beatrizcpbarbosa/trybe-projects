{"ast":null,"code":"var _jsxFileName = \"/Users/beatrizbarbosa/Projects/trybe-projects/sd-010-a-project-movie-cards-library-stateful/src/components/MovieLibrary.jsx\";\n// implement AddMovie component here\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport MovieList from './MovieList';\nimport SearchBar from './SearchBar';\nimport AddMovie from './AddMovie';\n\nclass MovieLibrary extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleState = paramState => {\n      this.setState(previusState => ({\n        movies: [...previusState.movies, paramState]\n      })); // aqui estou pegando as informações do novo filme e adicionando junto com os filmes que já existem no state movies\n    };\n\n    this.handleChangeText = event => {\n      this.setState({\n        searchText: event.target.value\n      });\n      console.log(this.state); // estou pegando o valor de cada input do SeachBar e passando para o estado\n    };\n\n    this.handleChangeBookmark = event => {\n      this.setState({\n        bookmarkedOnly: event.target.value\n      });\n    };\n\n    this.handleChangeGenre = event => {\n      this.setState({\n        selectedGenre: event.target.value\n      });\n    };\n\n    this.FilterMovies = () => {\n      const {\n        movies,\n        searchText,\n        bookmarkedOnly,\n        selectedGenre\n      } = this.state;\n      const moviesFilter = movies.filter(movie => {\n        if (searchText !== '' && movie.title === searchText) return movie;\n        if (bookmarkedOnly === true) return movie.bookmarkedOnly;\n        if (selectedGenre !== '') return movie.selectedGenre;\n        return movie;\n      });\n      return moviesFilter;\n    };\n\n    const {\n      data\n    } = this.props;\n    this.state = {\n      searchText: '',\n      bookmarkedOnly: false,\n      selectedGenre: '',\n      movies: data\n    };\n  }\n\n  render() {\n    const {\n      movies,\n      searchText,\n      bookmarkedOnly,\n      selectedGenre\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, \" My awesome movie library \"), /*#__PURE__*/React.createElement(SearchBar, {\n      searchText: searchText,\n      bookmarkedOnly: bookmarkedOnly,\n      selectedGenre: selectedGenre,\n      onSearchTextChange: this.handleChangeText,\n      onBookmarkedChange: this.handleChangeBookmark,\n      onSelectedGenreChange: this.handleChangeGenre,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(MovieList, {\n      movies: this.FilterMovies(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(AddMovie, {\n      onClick: this.handleState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nMovieLibrary.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object).isRequired\n};\nexport default MovieLibrary; // o instrutor Matheus Yuri Silva Domingos me ajudou a entender a logica de onde chamar o que desse componente e nas funções que são passadas como props para o componente SeachBAr","map":{"version":3,"sources":["/Users/beatrizbarbosa/Projects/trybe-projects/sd-010-a-project-movie-cards-library-stateful/src/components/MovieLibrary.jsx"],"names":["React","Component","PropTypes","MovieList","SearchBar","AddMovie","MovieLibrary","constructor","props","handleState","paramState","setState","previusState","movies","handleChangeText","event","searchText","target","value","console","log","state","handleChangeBookmark","bookmarkedOnly","handleChangeGenre","selectedGenre","FilterMovies","moviesFilter","filter","movie","title","data","render","propTypes","arrayOf","object","isRequired"],"mappings":"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","sourcesContent":["// implement AddMovie component here\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport MovieList from './MovieList';\nimport SearchBar from './SearchBar';\nimport AddMovie from './AddMovie';\n\nclass MovieLibrary extends Component {\n  constructor(props) {\n    super(props);\n    const { data } = this.props;\n\n    this.state = {\n      searchText: '',\n      bookmarkedOnly: false,\n      selectedGenre: '',\n      movies: data,\n    };\n  }\n\n  handleState = (paramState) => {\n    this.setState((previusState) => ({ movies: [...previusState.movies, paramState] }));\n    // aqui estou pegando as informações do novo filme e adicionando junto com os filmes que já existem no state movies\n  }\n\n  handleChangeText = (event) => {\n    this.setState({ searchText: event.target.value });\n    console.log(this.state);\n    // estou pegando o valor de cada input do SeachBar e passando para o estado\n  }\n\n  handleChangeBookmark = (event) => {\n    this.setState({ bookmarkedOnly: event.target.value });\n  }\n\n  handleChangeGenre = (event) => {\n    this.setState({ selectedGenre: event.target.value });\n  }\n\n  FilterMovies = () => {\n    const { movies, searchText, bookmarkedOnly, selectedGenre } = this.state;\n    const moviesFilter = movies.filter((movie) => {\n      if (searchText !== '' && movie.title === searchText) return movie;\n      if (bookmarkedOnly === true) return movie.bookmarkedOnly;\n      if (selectedGenre !== '') return movie.selectedGenre;\n      return movie;\n    });\n    return moviesFilter;\n  }\n\n  render() {\n    const { movies, searchText, bookmarkedOnly, selectedGenre } = this.state;\n\n    return (\n      <div>\n\n        <h2> My awesome movie library </h2>\n        <SearchBar\n          searchText={ searchText }\n          bookmarkedOnly={ bookmarkedOnly }\n          selectedGenre={ selectedGenre }\n          onSearchTextChange={ this.handleChangeText }\n          onBookmarkedChange={ this.handleChangeBookmark }\n          onSelectedGenreChange={ this.handleChangeGenre }\n        />\n        <MovieList movies={ this.FilterMovies() } />\n        <AddMovie onClick={ this.handleState } />\n\n      </div>\n    );\n  }\n}\n\nMovieLibrary.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.object,\n  ).isRequired,\n};\n\nexport default MovieLibrary;\n\n// o instrutor Matheus Yuri Silva Domingos me ajudou a entender a logica de onde chamar o que desse componente e nas funções que são passadas como props para o componente SeachBAr\n"]},"metadata":{},"sourceType":"module"}