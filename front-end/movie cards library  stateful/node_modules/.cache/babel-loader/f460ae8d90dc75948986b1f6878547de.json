{"ast":null,"code":"var _jsxFileName = \"/Users/beatrizbarbosa/Projects/trybe-projects/sd-010-a-project-movie-cards-library-stateful/src/components/MovieLibrary.jsx\";\n// implement AddMovie component here\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport MovieList from './MovieList';\nimport SearchBar from './SearchBar';\nimport AddMovie from './AddMovie';\n\nclass MovieLibrary extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleState = paramState => {\n      this.setState(previusState => ({\n        movies: [...previusState.movies, paramState]\n      })); // aqui estou pegando as informações do novo filme e adicionando junto com os filmes que já existem no state movies\n    };\n\n    this.handleChangeText = event => {\n      this.setState({\n        searchText: event.target.value\n      }); // estou pegando o valor de cada input do SeachBar e passando para o estado\n    };\n\n    this.handleChangeBookmark = event => {\n      this.setState({\n        bookmarkedOnly: event.target.value\n      });\n    };\n\n    this.handleChangeGenre = event => {\n      this.setState({\n        selectedGenre: event.target.value\n      });\n    };\n\n    const {\n      movies\n    } = this.props;\n    this.state = {\n      searchText: '',\n      bookmarkedOnly: false,\n      selectedGenre: '',\n      movies\n    };\n  }\n\n  // FilterMovies = () => {\n  //   const { movies, searchText, bookmarkedOnly, selectedGenre } = this.state;\n  //   movies.filter((movie) => {\n  //     if (searchText !== '' && movie.title.includes(searchText)) return true;\n  //     if (bookmarkedOnly && movie.bookmarked.includes(bookmarkedOnly)) return true;\n  //     if (selectedGenre !== '' && movie.genre.includes(selectedGenre)) return true;\n  //     return true;\n  //   });\n  //   return movies;\n  // }\n  render() {\n    const {\n      searchText,\n      bookmarkedOnly,\n      selectedGenre\n    } = this.state; // Para a lógica de filtragem dos filmes, contei com a ajuda do pull request da Ana Ventura\n\n    let {\n      movies\n    } = this.state;\n    const filterMoviesByBookmarked = movies.filter(movie => movie.bookmarked === true);\n    const filterMoviesByGenre = movies.filter(movie => movie.genre === selectedGenre);\n    const filterMoviesByText = movies.filter(movie => movie.title.includes(searchText) || movie.subtitle.includes(searchText) || movie.storyline.includes(searchText));\n    if (searchText) movies = filterMoviesByText;\n    if (bookmarkedOnly) movies = filterMoviesByBookmarked;\n    if (selectedGenre) movies = filterMoviesByGenre;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, \" My awesome movie library \"), /*#__PURE__*/React.createElement(SearchBar, {\n      searchText: searchText,\n      bookmarkedOnly: bookmarkedOnly,\n      selectedGenre: selectedGenre,\n      onSearchTextChange: this.handleChangeText,\n      onBookmarkedChange: this.handleChangeBookmark,\n      onSelectedGenreChange: this.handleChangeGenre,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(MovieList, {\n      movies: movies,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(AddMovie, {\n      onClick: this.handleState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nMovieLibrary.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object).isRequired\n};\nexport default MovieLibrary; // o instrutor Matheus Yuri Silva Domingos me ajudou a entender a logica de onde chamar o que desse componente e nas funções que são passadas como props para o componente SeachBAr","map":{"version":3,"sources":["/Users/beatrizbarbosa/Projects/trybe-projects/sd-010-a-project-movie-cards-library-stateful/src/components/MovieLibrary.jsx"],"names":["React","Component","PropTypes","MovieList","SearchBar","AddMovie","MovieLibrary","constructor","props","handleState","paramState","setState","previusState","movies","handleChangeText","event","searchText","target","value","handleChangeBookmark","bookmarkedOnly","handleChangeGenre","selectedGenre","state","render","filterMoviesByBookmarked","filter","movie","bookmarked","filterMoviesByGenre","genre","filterMoviesByText","title","includes","subtitle","storyline","propTypes","arrayOf","object","isRequired"],"mappings":"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","sourcesContent":["// implement AddMovie component here\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport MovieList from './MovieList';\nimport SearchBar from './SearchBar';\nimport AddMovie from './AddMovie';\n\nclass MovieLibrary extends Component {\n  constructor(props) {\n    super(props);\n    const { movies } = this.props;\n\n    this.state = {\n      searchText: '',\n      bookmarkedOnly: false,\n      selectedGenre: '',\n      movies,\n    };\n  }\n\n  handleState = (paramState) => {\n    this.setState((previusState) => ({ movies: [...previusState.movies, paramState] }));\n    // aqui estou pegando as informações do novo filme e adicionando junto com os filmes que já existem no state movies\n  }\n\n  handleChangeText = (event) => {\n    this.setState({ searchText: event.target.value });\n    // estou pegando o valor de cada input do SeachBar e passando para o estado\n  }\n\n  handleChangeBookmark = (event) => {\n    this.setState({ bookmarkedOnly: event.target.value });\n  }\n\n  handleChangeGenre = (event) => {\n    this.setState({ selectedGenre: event.target.value });\n  }\n\n  // FilterMovies = () => {\n  //   const { movies, searchText, bookmarkedOnly, selectedGenre } = this.state;\n  //   movies.filter((movie) => {\n  //     if (searchText !== '' && movie.title.includes(searchText)) return true;\n  //     if (bookmarkedOnly && movie.bookmarked.includes(bookmarkedOnly)) return true;\n  //     if (selectedGenre !== '' && movie.genre.includes(selectedGenre)) return true;\n  //     return true;\n  //   });\n  //   return movies;\n  // }\n\n  render() {\n    const { searchText, bookmarkedOnly, selectedGenre } = this.state;\n    // Para a lógica de filtragem dos filmes, contei com a ajuda do pull request da Ana Ventura\n    let { movies } = this.state;\n\n    const filterMoviesByBookmarked = movies.filter((movie) => movie.bookmarked === true);\n\n    const filterMoviesByGenre = movies.filter((movie) => movie.genre === selectedGenre);\n\n    const filterMoviesByText = movies.filter((movie) => movie.title.includes(searchText)\n      || movie.subtitle.includes(searchText)\n      || movie.storyline.includes(searchText));\n\n    if (searchText) movies = filterMoviesByText;\n    if (bookmarkedOnly) movies = filterMoviesByBookmarked;\n    if (selectedGenre) movies = filterMoviesByGenre;\n\n    return (\n      <div>\n\n        <h2> My awesome movie library </h2>\n        <SearchBar\n          searchText={ searchText }\n          bookmarkedOnly={ bookmarkedOnly }\n          selectedGenre={ selectedGenre }\n          onSearchTextChange={ this.handleChangeText }\n          onBookmarkedChange={ this.handleChangeBookmark }\n          onSelectedGenreChange={ this.handleChangeGenre }\n        />\n        <MovieList movies={ movies } />\n        <AddMovie onClick={ this.handleState } />\n\n      </div>\n    );\n  }\n}\n\nMovieLibrary.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.object,\n  ).isRequired,\n};\n\nexport default MovieLibrary;\n\n// o instrutor Matheus Yuri Silva Domingos me ajudou a entender a logica de onde chamar o que desse componente e nas funções que são passadas como props para o componente SeachBAr\n"]},"metadata":{},"sourceType":"module"}