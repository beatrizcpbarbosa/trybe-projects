{"ast":null,"code":"var _jsxFileName = \"/Users/beatrizbarbosa/Projects/trybe-projects/sd-010-a-project-movie-cards-library-stateful/src/components/AddMovie.jsx\";\n// implement AddMovie component here\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport AddImage from './FormAddMovie/AddImage';\nimport AddRating from './FormAddMovie/AddRating';\nimport AddStoryline from './FormAddMovie/AddStoryline';\nimport AddSubtitle from './FormAddMovie/AddSubtitle';\nimport AddTitle from './FormAddMovie/AddTitle';\n\nclass AddMovie extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      console.log(event.target.name);\n      console.log(this.state);\n      const x = event.target.name;\n      this.setState({\n        [x]: event.target.value // title: event.target.value,\n        // imagePath: event.target.value,\n        // storyline: event.target.value,\n        // rating: event.target.value,\n        // genre: event.target.value,\n\n      });\n    };\n\n    this.handleReset = event => {\n      event.preventDefault(); // para impedir de carregar a tela novamente\n\n      this.setState({\n        subtitle: '',\n        title: '',\n        imagePath: '',\n        storyline: '',\n        rating: 0,\n        genre: 'action'\n      });\n    };\n\n    this.state = {\n      subtitle: '',\n      title: '',\n      imagePath: '',\n      storyline: '',\n      rating: 0,\n      genre: 'action'\n    };\n  }\n\n  render() {\n    const {\n      onClick\n    } = this.props;\n    const {\n      subtitle,\n      title,\n      imagePath,\n      storyline,\n      rating,\n      genre\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      \"data-testid\": \"add-movie-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(AddTitle, {\n      value: title,\n      callback: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(AddSubtitle, {\n      value: subtitle,\n      callback: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(AddImage, {\n      value: imagePath,\n      callback: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(AddStoryline, {\n      value: storyline,\n      callback: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(AddRating, {\n      value: rating,\n      callback: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      \"data-testid\": \"genre-input-label\",\n      htmlFor: \"input-genre\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, \"G\\xEAnero\", /*#__PURE__*/React.createElement(\"select\", {\n      value: genre,\n      \"data-testid\": \"genre-input\",\n      onChange: this.handleChange,\n      id: \"input-genre\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"action\",\n      \"data-testid\": \"genre-option\",\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, \"A\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"comedy\",\n      \"data-testid\": \"genre-option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, \"Com\\xE9dia\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"thriller\",\n      \"data-testid\": \"genre-option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, \"Suspense\"))), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      \"data-testid\": \"send-button\",\n      onClick: event => {\n        onClick(this.state); // envio o estado para MovieLibrary antes de resetar o estado\n\n        this.handleReset(event);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, \"Adicionar filme\"));\n  }\n\n}\n\nAddMovie.propTypes = {\n  onClick: PropTypes.func\n}.isRequered;\nexport default AddMovie; // tive ajuda do murilo tumar 10 A para entender o requisito 14 e também a função handleChange","map":{"version":3,"sources":["/Users/beatrizbarbosa/Projects/trybe-projects/sd-010-a-project-movie-cards-library-stateful/src/components/AddMovie.jsx"],"names":["React","PropTypes","AddImage","AddRating","AddStoryline","AddSubtitle","AddTitle","AddMovie","Component","constructor","props","handleChange","event","console","log","target","name","state","x","setState","value","handleReset","preventDefault","subtitle","title","imagePath","storyline","rating","genre","render","onClick","propTypes","func","isRequered"],"mappings":"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","sourcesContent":["// implement AddMovie component here\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport AddImage from './FormAddMovie/AddImage';\nimport AddRating from './FormAddMovie/AddRating';\nimport AddStoryline from './FormAddMovie/AddStoryline';\nimport AddSubtitle from './FormAddMovie/AddSubtitle';\nimport AddTitle from './FormAddMovie/AddTitle';\n\nclass AddMovie extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      subtitle: '',\n      title: '',\n      imagePath: '',\n      storyline: '',\n      rating: 0,\n      genre: 'action',\n    };\n  }\n\n  handleChange = (event) => {\n    console.log(event.target.name);\n    console.log(this.state);\n    const x = event.target.name;\n    this.setState({\n      [x]: event.target.value,\n      // title: event.target.value,\n      // imagePath: event.target.value,\n      // storyline: event.target.value,\n      // rating: event.target.value,\n      // genre: event.target.value,\n    });\n  }\n\n  handleReset = (event) => {\n    event.preventDefault(); // para impedir de carregar a tela novamente\n    this.setState({\n      subtitle: '',\n      title: '',\n      imagePath: '',\n      storyline: '',\n      rating: 0,\n      genre: 'action',\n    });\n  }\n\n  render() {\n    const { onClick } = this.props;\n    const { subtitle, title, imagePath, storyline, rating, genre } = this.state;\n    return (\n      <form data-testid=\"add-movie-form\">\n\n        <AddTitle value={ title } callback={ this.handleChange } />\n        <AddSubtitle value={ subtitle } callback={ this.handleChange } />\n        <AddImage value={ imagePath } callback={ this.handleChange } />\n        <AddStoryline value={ storyline } callback={ this.handleChange } />\n        <AddRating value={ rating } callback={ this.handleChange } />\n\n        <label data-testid=\"genre-input-label\" htmlFor=\"input-genre\">\n          Gênero\n          <select\n            value={ genre }\n            data-testid=\"genre-input\"\n            onChange={ this.handleChange }\n            id=\"input-genre\"\n          >\n            <option value=\"action\" data-testid=\"genre-option\" selected>Ação</option>\n            <option value=\"comedy\" data-testid=\"genre-option\">Comédia</option>\n            <option value=\"thriller\" data-testid=\"genre-option\">Suspense</option>\n          </select>\n        </label>\n\n        <button\n          type=\"submit\"\n          data-testid=\"send-button\"\n          onClick={ (event) => {\n            onClick(this.state); // envio o estado para MovieLibrary antes de resetar o estado\n            this.handleReset(event);\n          } }\n        >\n          Adicionar filme\n        </button>\n\n      </form>\n    );\n  }\n}\n\nAddMovie.propTypes = {\n  onClick: PropTypes.func,\n}.isRequered;\n\nexport default AddMovie;\n\n// tive ajuda do murilo tumar 10 A para entender o requisito 14 e também a função handleChange\n"]},"metadata":{},"sourceType":"module"}