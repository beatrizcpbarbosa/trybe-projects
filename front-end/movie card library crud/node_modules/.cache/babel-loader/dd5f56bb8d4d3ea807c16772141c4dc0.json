{"ast":null,"code":"var _jsxFileName = \"/Users/beatrizbarbosa/Projects/trybe-projects/sd-010-a-project-movie-card-library-crud/src/pages/EditMovie.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router';\nimport { Loading, MovieForm } from '../components';\nimport * as movieAPI from '../services/movieAPI';\n\nclass EditMovie extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleFetch = () => {\n      const {\n        movieForm\n      } = this.state;\n      movieAPI.updateMovie(movieForm).then(this.setState({\n        shouldRedirect: true\n      }));\n    };\n\n    this.handleMovie = () => {\n      const {\n        match\n      } = this.props;\n      const {\n        id\n      } = match.params;\n      console.log(match);\n      movieAPI.getMovie(id).then(resolve => this.handleStateMovie(resolve));\n    };\n\n    this.handleStateMovie = param => {\n      this.setState({\n        movie: param\n      });\n    };\n\n    this.handleReturn = () => {\n      const {\n        status,\n        shouldRedirect\n      } = this.state;\n\n      if (shouldRedirect) {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 14\n          }\n        });\n      }\n\n      if (status === 'loading') {\n        return /*#__PURE__*/React.createElement(Loading, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 14\n          }\n        });\n      }\n    };\n\n    this.state = {\n      shouldRedirect: false,\n      status: 'loading',\n      movie: {}\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n    this.handleMovie();\n    this.handleFetch();\n  }\n\n  handleSubmit(updatedMovie) {\n    // coloca o conteudo do formulario dentro do estado, updateMovie é um obejeto com varias chaves\n    this.setState({\n      movieForm: updatedMovie\n    });\n  }\n\n  render() {\n    const {\n      movie\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-testid\": \"edit-movie\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MovieForm, {\n      movie: movie,\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }), this.handleReturn);\n  }\n\n}\n\nexport default EditMovie;","map":{"version":3,"sources":["/Users/beatrizbarbosa/Projects/trybe-projects/sd-010-a-project-movie-card-library-crud/src/pages/EditMovie.js"],"names":["React","Component","Redirect","Loading","MovieForm","movieAPI","EditMovie","constructor","props","handleFetch","movieForm","state","updateMovie","then","setState","shouldRedirect","handleMovie","match","id","params","console","log","getMovie","resolve","handleStateMovie","param","movie","handleReturn","status","handleSubmit","bind","componentDidMount","updatedMovie","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,eAAnC;AACA,OAAO,KAAKC,QAAZ,MAA0B,sBAA1B;;AAEA,MAAMC,SAAN,SAAwBL,SAAxB,CAAkC;AAChCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAgBnBC,WAhBmB,GAgBL,MAAM;AAClB,YAAM;AAAEC,QAAAA;AAAF,UAAgB,KAAKC,KAA3B;AACAN,MAAAA,QAAQ,CAACO,WAAT,CAAqBF,SAArB,EACGG,IADH,CACQ,KAAKC,QAAL,CAAc;AAClBC,QAAAA,cAAc,EAAE;AADE,OAAd,CADR;AAID,KAtBkB;;AAAA,SAwBnBC,WAxBmB,GAwBL,MAAM;AAClB,YAAM;AAAEC,QAAAA;AAAF,UAAY,KAAKT,KAAvB;AACA,YAAM;AAAEU,QAAAA;AAAF,UAASD,KAAK,CAACE,MAArB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACAZ,MAAAA,QAAQ,CAACiB,QAAT,CAAkBJ,EAAlB,EACGL,IADH,CACSU,OAAD,IAAa,KAAKC,gBAAL,CAAsBD,OAAtB,CADrB;AAED,KA9BkB;;AAAA,SAgCnBC,gBAhCmB,GAgCCC,KAAD,IAAW;AAC5B,WAAKX,QAAL,CAAc;AACZY,QAAAA,KAAK,EAAED;AADK,OAAd;AAGD,KApCkB;;AAAA,SA4CnBE,YA5CmB,GA4CJ,MAAM;AACnB,YAAM;AAAEC,QAAAA,MAAF;AAAUb,QAAAA;AAAV,UAA6B,KAAKJ,KAAxC;;AACA,UAAII,cAAJ,EAAoB;AAClB,4BAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AAED,UAAIa,MAAM,KAAK,SAAf,EAA0B;AACxB,4BAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AACF,KArDkB;;AAEjB,SAAKjB,KAAL,GAAa;AACXI,MAAAA,cAAc,EAAE,KADL;AAEXa,MAAAA,MAAM,EAAE,SAFG;AAGXF,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKA,SAAKG,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBX,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAjB;AACA,SAAKQ,WAAL;AACA,SAAKP,WAAL;AACD;;AAwBDoB,EAAAA,YAAY,CAACG,YAAD,EAAe;AAAE;AAC3B,SAAKlB,QAAL,CAAc;AACZJ,MAAAA,SAAS,EAAEsB;AADC,KAAd;AAGD;;AAaDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEP,MAAAA;AAAF,QAAY,KAAKf,KAAvB;AACA,wBACE;AAAK,qBAAY,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAGe,KAAnB;AAA2B,MAAA,QAAQ,EAAG,KAAKG,YAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEG,KAAKF,YAFR,CADF;AAMD;;AAhE+B;;AAmElC,eAAerB,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from 'react-router';\nimport { Loading, MovieForm } from '../components';\nimport * as movieAPI from '../services/movieAPI';\n\nclass EditMovie extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      shouldRedirect: false,\n      status: 'loading',\n      movie: {},\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n    this.handleMovie();\n    this.handleFetch();\n  }\n\n  handleFetch = () => {\n    const { movieForm } = this.state;\n    movieAPI.updateMovie(movieForm)\n      .then(this.setState({\n        shouldRedirect: true,\n      }));\n  }\n\n  handleMovie = () => {\n    const { match } = this.props;\n    const { id } = match.params;\n    console.log(match);\n    movieAPI.getMovie(id)\n      .then((resolve) => this.handleStateMovie(resolve));\n  }\n\n  handleStateMovie = (param) => {\n    this.setState({\n      movie: param,\n    });\n  }\n\n  handleSubmit(updatedMovie) { // coloca o conteudo do formulario dentro do estado, updateMovie é um obejeto com varias chaves\n    this.setState({\n      movieForm: updatedMovie,\n    });\n  }\n\n  handleReturn = () => {\n    const { status, shouldRedirect } = this.state;\n    if (shouldRedirect) {\n      return <Redirect />;\n    }\n\n    if (status === 'loading') {\n      return <Loading />;\n    }\n  }\n\n  render() {\n    const { movie } = this.state;\n    return (\n      <div data-testid=\"edit-movie\">\n        <MovieForm movie={ movie } onSubmit={ this.handleSubmit } />\n        {this.handleReturn}\n      </div>\n    );\n  }\n}\n\nexport default EditMovie;\n"]},"metadata":{},"sourceType":"module"}