{"ast":null,"code":"var _jsxFileName = \"/Users/beatrizbarbosa/Projects/trybe-projects/sd-010-a-project-movie-card-library-crud/src/pages/EditMovie.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router';\nimport { MovieForm } from '../components';\nimport * as movieAPI from '../services/movieAPI';\n\nclass EditMovie extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleFetch = () => {\n      const {\n        movieForm\n      } = this.state;\n      movieAPI.updateMovie(movieForm) // .then(this.setState({\n      //   shouldRedirect: true,\n      // }));\n      .then( /*#__PURE__*/React.createElement(Redirect, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }\n      }));\n    };\n\n    this.state = {\n      shouldRedirect: false,\n      status: 'loading'\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.handleFetch();\n  }\n\n  handleSubmit(updatedMovie) {\n    // coloca o conteudo do formulario dentro do estado, updateMovie é um obejeto com varias chaves\n    this.setState({\n      movieForm: updatedMovie\n    });\n  } // handleReturn = () => {\n  //   const { status, shouldRedirect } = this.state;\n  //   if (shouldRedirect) {\n  //     <Redirect />\n  //   }\n  //   if (status === 'loading') {\n  //     // render Loading\n  //   }\n  // }\n\n\n  render() {\n    const {\n      movie\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-testid\": \"edit-movie\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MovieForm, {\n      movie: movie,\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default EditMovie;","map":{"version":3,"sources":["/Users/beatrizbarbosa/Projects/trybe-projects/sd-010-a-project-movie-card-library-crud/src/pages/EditMovie.js"],"names":["React","Component","Redirect","MovieForm","movieAPI","EditMovie","constructor","props","handleFetch","movieForm","state","updateMovie","then","shouldRedirect","status","handleSubmit","bind","componentDidMount","updatedMovie","setState","render","movie"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,OAAO,KAAKC,QAAZ,MAA0B,sBAA1B;;AAEA,MAAMC,SAAN,SAAwBJ,SAAxB,CAAkC;AAChCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAanBC,WAbmB,GAaL,MAAM;AAClB,YAAM;AAAEC,QAAAA;AAAF,UAAgB,KAAKC,KAA3B;AACAN,MAAAA,QAAQ,CAACO,WAAT,CAAqBF,SAArB,EACE;AACA;AACA;AAHF,OAIGG,IAJH,eAIQ,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJR;AAKD,KApBkB;;AAEjB,SAAKF,KAAL,GAAa;AACXG,MAAAA,cAAc,EAAE,KADL;AAEXC,MAAAA,MAAM,EAAE;AAFG,KAAb;AAIA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKT,WAAL;AACD;;AAWDO,EAAAA,YAAY,CAACG,YAAD,EAAe;AAAE;AAC3B,SAAKC,QAAL,CAAc;AACZV,MAAAA,SAAS,EAAES;AADC,KAAd;AAGD,GA3B+B,CA6BhC;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEAE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKX,KAAvB;AACA,wBACE;AAAK,qBAAY,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAGW,KAAnB;AAA2B,MAAA,QAAQ,EAAG,KAAKN,YAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AA/C+B;;AAkDlC,eAAeV,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from 'react-router';\nimport { MovieForm } from '../components';\nimport * as movieAPI from '../services/movieAPI';\n\nclass EditMovie extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      shouldRedirect: false,\n      status: 'loading',\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.handleFetch();\n  }\n\n  handleFetch = () => {\n    const { movieForm } = this.state;\n    movieAPI.updateMovie(movieForm)\n      // .then(this.setState({\n      //   shouldRedirect: true,\n      // }));\n      .then(<Redirect />);\n  }\n\n  handleSubmit(updatedMovie) { // coloca o conteudo do formulario dentro do estado, updateMovie é um obejeto com varias chaves\n    this.setState({\n      movieForm: updatedMovie,\n    });\n  }\n\n  // handleReturn = () => {\n  //   const { status, shouldRedirect } = this.state;\n  //   if (shouldRedirect) {\n  //     <Redirect />\n  //   }\n\n  //   if (status === 'loading') {\n  //     // render Loading\n  //   }\n  // }\n\n  render() {\n    const { movie } = this.state;\n    return (\n      <div data-testid=\"edit-movie\">\n        <MovieForm movie={ movie } onSubmit={ this.handleSubmit } />\n      </div>\n    );\n  }\n}\n\nexport default EditMovie;\n"]},"metadata":{},"sourceType":"module"}