{"ast":null,"code":"var _jsxFileName = \"/Users/beatrizbarbosa/Projects/trybe-projects/sd-010-a-project-movie-card-library-crud/src/pages/MovieDetails.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport * as movieAPI from '../services/movieAPI';\nimport { Loading } from '../components';\n\nclass MovieDetails extends Component {\n  constructor() {\n    super();\n\n    this.handleMovies = param => {\n      this.setState({\n        movie: param,\n        loading: false\n      });\n      console.log(this.state);\n    };\n\n    this.handleDelete = () => {\n      const {\n        match\n      } = this.props;\n      const {\n        id\n      } = match.params;\n      movieAPI.deleteMovie(id);\n    };\n\n    this.handleReturn = () => {\n      const {\n        loading,\n        movie\n      } = this.state;\n      const {\n        title,\n        storyline,\n        imagePath,\n        genre,\n        rating,\n        subtitle\n      } = movie;\n      console.log(movie);\n\n      if (loading) {\n        console.log(loading);\n        return /*#__PURE__*/React.createElement(Loading, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 14\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        \"data-testid\": \"movie-details\",\n        className: \"movie-details\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        alt: \"Movie Cover\",\n        src: `../${imagePath}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }\n      }, `Subtitle: ${title}`), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }\n      }, `Subtitle: ${subtitle}`), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }\n      }, `Storyline: ${storyline}`), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }\n      }, `Genre: ${genre}`), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }\n      }, `Rating: ${rating}`), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        className: \"link\",\n        to: `/movies/${movie.id}/edit`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }\n      }, \"EDITAR\")), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        className: \"link\",\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }\n      }, \"VOLTAR\")), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.handleDelete,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        className: \"link\",\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }\n      }, \"DELETAR\"))));\n    };\n\n    this.state = {\n      movie: [],\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    const {\n      match\n    } = this.props;\n    const {\n      id\n    } = match.params; // aqui estou pegadno o id que foi passado como props no <Link to={ `/movies/${id}` }>VER DETALHES</Link>\n    // também estou chamando a api novamente para pegar todos os dados dos movies novamente\n\n    console.log(this.props);\n    movieAPI.getMovie(id).then(resolve => this.handleMovies(resolve));\n  }\n\n  render() {\n    // Change the condition to check the state\n    return /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, this.handleReturn());\n  }\n\n}\n\nMovieDetails.propTypes = {\n  id: PropTypes.number\n}.isRequired;\nexport default MovieDetails;","map":{"version":3,"sources":["/Users/beatrizbarbosa/Projects/trybe-projects/sd-010-a-project-movie-card-library-crud/src/pages/MovieDetails.js"],"names":["React","Component","PropTypes","Link","movieAPI","Loading","MovieDetails","constructor","handleMovies","param","setState","movie","loading","console","log","state","handleDelete","match","props","id","params","deleteMovie","handleReturn","title","storyline","imagePath","genre","rating","subtitle","componentDidMount","getMovie","then","resolve","render","propTypes","number","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport * as movieAPI from '../services/movieAPI';\nimport { Loading } from '../components';\n\nclass MovieDetails extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      movie: [],\n      loading: true,\n    };\n  }\n\n  componentDidMount() {\n    const { match } = this.props;\n    const { id } = match.params;\n    // aqui estou pegadno o id que foi passado como props no <Link to={ `/movies/${id}` }>VER DETALHES</Link>\n    // também estou chamando a api novamente para pegar todos os dados dos movies novamente\n    console.log(this.props);\n    movieAPI.getMovie(id)\n      .then((resolve) => this.handleMovies(resolve));\n  }\n\n  handleMovies = (param) => {\n    this.setState({\n      movie: param,\n      loading: false,\n    });\n    console.log(this.state);\n  }\n\n  handleDelete = () => {\n    const { match } = this.props;\n    const { id } = match.params;\n    movieAPI.deleteMovie(id);\n  }\n\n  handleReturn = () => {\n    const { loading, movie } = this.state;\n    const { title, storyline, imagePath, genre, rating, subtitle } = movie;\n    console.log(movie);\n\n    if (loading) {\n      console.log(loading);\n      return <Loading />;\n    }\n\n    return (\n      <div data-testid=\"movie-details\" className=\"movie-details\">\n\n        <img alt=\"Movie Cover\" src={ `../${imagePath}` } />\n\n        <div className=\"content\">\n          <h2>{ `Subtitle: ${title}` }</h2>\n          <p>{ `Subtitle: ${subtitle}` }</p>\n          <p>{ `Storyline: ${storyline}` }</p>\n          <p>{ `Genre: ${genre}` }</p>\n          <p>{ `Rating: ${rating}` }</p>\n          <button type=\"button\">\n            <Link className=\"link\" to={ `/movies/${movie.id}/edit` }>EDITAR</Link>\n          </button>\n          <button type=\"button\">\n            <Link className=\"link\" to=\"/\">VOLTAR</Link>\n          </button>\n          <button type=\"button\" onClick={ this.handleDelete }>\n            <Link className=\"link\" to=\"/\">DELETAR</Link>\n          </button>\n        </div>\n\n      </div>\n    );\n  }\n\n  render() {\n    // Change the condition to check the state\n\n    return (\n      <section>\n        { this.handleReturn() }\n      </section>\n    );\n  }\n}\n\nMovieDetails.propTypes = {\n  id: PropTypes.number,\n}.isRequired;\n\nexport default MovieDetails;\n"]},"metadata":{},"sourceType":"module"}