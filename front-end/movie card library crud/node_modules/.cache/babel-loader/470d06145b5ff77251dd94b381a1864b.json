{"ast":null,"code":"var _jsxFileName = \"/Users/beatrizbarbosa/Projects/trybe-projects/sd-010-a-project-movie-card-library-crud/src/pages/EditMovie.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router';\nimport { Loading, MovieForm } from '../components';\nimport * as movieAPI from '../services/movieAPI';\n\nclass EditMovie extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleFetch = () => {\n      const {\n        movieForm\n      } = this.state;\n      movieAPI.updateMovie(movieForm).then(this.setState({\n        shouldRedirect: true\n      }));\n    };\n\n    this.handleMovie = () => {\n      const {\n        match: {\n          params: {\n            id\n          }\n        }\n      } = this.props; // const { match } = this.props;\n      // const { id } = match.params;\n\n      console.log(id);\n      movieAPI.getMovie(id).then(resolve => this.handleStateMovie(resolve));\n    };\n\n    this.handleStateMovie = param => {\n      this.setState({\n        movie: param,\n        status: ''\n      });\n    };\n\n    this.handleReturn = () => {\n      const {\n        status,\n        movie\n      } = this.state;\n\n      if (status === 'loading') {\n        return /*#__PURE__*/React.createElement(Loading, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 14\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(MovieForm, {\n        movie: movie,\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 12\n        }\n      });\n    };\n\n    this.handleRedirect = () => {\n      const {\n        shouldRedirect\n      } = this.state;\n\n      if (shouldRedirect) {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 14\n          }\n        });\n      }\n    };\n\n    this.state = {\n      shouldRedirect: false,\n      status: 'loading',\n      movie: {}\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n    this.handleMovie(); // this.handleFetch();\n  } // aqui estou chamando a \"API\" e depois que ela \"responde\" altero a chave shouldRedirect do estado\n\n\n  // coloca o conteudo do formulario dentro do estado, updateMovie é um obejeto com varias chaves\n  handleSubmit(updatedMovie) {\n    this.setState({\n      movieForm: updatedMovie\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-testid\": \"edit-movie\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, this.handleReturn(), this.handleRedirect());\n  }\n\n}\n\nMovieDetails.propTypes = {\n  id: PropTypes.number,\n  match: PropTypes.object\n}.isRequired;\nexport default EditMovie;","map":{"version":3,"sources":["/Users/beatrizbarbosa/Projects/trybe-projects/sd-010-a-project-movie-card-library-crud/src/pages/EditMovie.js"],"names":["React","Component","PropTypes","Redirect","Loading","MovieForm","movieAPI","EditMovie","constructor","props","handleFetch","movieForm","state","updateMovie","then","setState","shouldRedirect","handleMovie","match","params","id","console","log","getMovie","resolve","handleStateMovie","param","movie","status","handleReturn","handleSubmit","handleRedirect","bind","componentDidMount","updatedMovie","render","MovieDetails","propTypes","number","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router';\nimport { Loading, MovieForm } from '../components';\nimport * as movieAPI from '../services/movieAPI';\n\nclass EditMovie extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      shouldRedirect: false,\n      status: 'loading',\n      movie: {},\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n    this.handleMovie();\n    // this.handleFetch();\n  }\n\n  // aqui estou chamando a \"API\" e depois que ela \"responde\" altero a chave shouldRedirect do estado\n  handleFetch = () => {\n    const { movieForm } = this.state;\n    movieAPI.updateMovie(movieForm)\n      .then(this.setState({\n        shouldRedirect: true,\n      }));\n  }\n\n  // cahamo novamente, a partir do id do route (param) o função get movie, coloco ela no state para depois passar como props para o MovieForm\n  handleMovie = () => {\n    const { match: { params: { id } } } = this.props;\n    // const { match } = this.props;\n    // const { id } = match.params;\n    console.log(id);\n    movieAPI.getMovie(id)\n      .then((resolve) => this.handleStateMovie(resolve));\n  }\n\n  handleStateMovie = (param) => {\n    this.setState({\n      movie: param,\n      status: '',\n    });\n  }\n\n  // coloca o conteudo do formulario dentro do estado, updateMovie é um obejeto com varias chaves\n  handleSubmit(updatedMovie) {\n    this.setState({\n      movieForm: updatedMovie,\n    });\n  }\n\n  handleReturn = () => {\n    const { status, movie } = this.state;\n\n    if (status === 'loading') {\n      return <Loading />;\n    }\n\n    return <MovieForm movie={ movie } onSubmit={ this.handleSubmit } />;\n  }\n\n  handleRedirect = () => {\n    const { shouldRedirect } = this.state;\n\n    if (shouldRedirect) {\n      return <Redirect />;\n    }\n  }\n\n  render() {\n    return (\n      <div data-testid=\"edit-movie\">\n        { this.handleReturn() }\n        { this.handleRedirect() }\n      </div>\n    );\n  }\n}\n\nMovieDetails.propTypes = {\n  id: PropTypes.number,\n  match: PropTypes.object,\n}.isRequired;\n\nexport default EditMovie;\n"]},"metadata":{},"sourceType":"module"}